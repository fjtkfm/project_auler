(ql:quickload :cl-ppcre)

(defun alphabet-to-integer (a)
  (cond ((char= a #\A) 1)
        ((char= a #\B) 2)
        ((char= a #\C) 3)
        ((char= a #\D) 4)
        ((char= a #\E) 5)
        ((char= a #\F) 6)
        ((char= a #\G) 7)
        ((char= a #\H) 8)
        ((char= a #\I) 9)
        ((char= a #\J) 10)
        ((char= a #\K) 11)
        ((char= a #\L) 12)
        ((char= a #\M) 13)
        ((char= a #\N) 14)
        ((char= a #\O) 15)
        ((char= a #\P) 16)
        ((char= a #\Q) 17)
        ((char= a #\R) 18)
        ((char= a #\S) 19)
        ((char= a #\T) 20)
        ((char= a #\U) 21)
        ((char= a #\V) 22)
        ((char= a #\W) 23)
        ((char= a #\X) 24)
        ((char= a #\Y) 25)
        ((char= a #\Z) 26)
        (t 0)))

(defun main ()
  (let ((total 0) names)
    (with-open-file (in "names.txt")
      (loop for line = (read-line in nil) while line do
              (setq names (sort (cl-ppcre:split "," line) #'string<)))
    (loop for n from 0 upto (- (length names) 1) do
            (let ((name (nth n names)) (sum 0))
                (loop for s across name do 
                        (setq sum (+ sum (alphabet-to-integer  s))))
                (setq total (+ total (* sum (+ n 1)))))))
    (print total)))